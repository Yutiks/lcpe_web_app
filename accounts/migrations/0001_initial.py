# Generated by Django 5.0.6 on 2025-07-10 17:18

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height_cm', models.PositiveIntegerField(default=175)),
                ('weight_kg', models.FloatField(default=65.0)),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], default='male', max_length=10)),
                ('age', models.PositiveIntegerField(default=18)),
                ('activity_level', models.CharField(choices=[('low', 'Low - Little or no exercise'), ('moderate', 'Moderate - Light exercise, 1–3 times/week'), ('high', 'High - Moderate exercise, 3–5 times/week'), ('very_high', 'Very high - Intense exercise, 6–7 days/week'), ('hyperactive', 'Hyperactive - Very intense, 2h+ per day')], default='moderate', max_length=20)),
                ('goal', models.CharField(choices=[('lose_20', 'Lose weight - 20%'), ('lose_10', 'Lose weight slowly - 10%'), ('maintain', 'Maintain weight'), ('gain_10', 'Gain weight slowly - 10%'), ('gain_20', 'Gain weight - 20%')], default='maintain', max_length=20)),
                ('fat_percentage', models.FloatField(blank=True, null=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('height_unit', models.CharField(choices=[('cm', 'Centimeters'), ('ft_in', 'Feet and inches')], default='cm', max_length=10)),
                ('weight_unit', models.CharField(choices=[('kg', 'Kilograms'), ('lbs', 'Pounds')], default='kg', max_length=10)),
                ('energy_unit', models.CharField(choices=[('kcal', 'Calories'), ('kj', 'Kilojoules')], default='kcal', max_length=10)),
                ('water_unit', models.CharField(choices=[('ml', 'Milliliters'), ('oz', 'Ounces'), ('cups', 'Cups')], default='ml', max_length=10)),
                ('date_format', models.CharField(choices=[('DD/MM/YYYY', 'DD/MM/YYYY'), ('MM/DD/YYYY', 'MM/DD/YYYY'), ('YYYY/MM/DD', 'YYYY/MM/DD')], default='DD/MM/YYYY', max_length=20)),
                ('time_format', models.CharField(choices=[('24h', '24 часа'), ('12h', '12 часов')], default='24h', max_length=5)),
                ('week_start', models.CharField(choices=[('sunday', 'Sunday'), ('monday', 'Monday')], default='monday', max_length=10)),
                ('formula', models.CharField(choices=[('harris_benedict', 'Harris-Benedict'), ('mifflin_st_jeor', 'Mifflin-St Jeor'), ('katch_mcardle', 'Katch-McArdle')], default='mifflin_st_jeor', max_length=20)),
                ('timezone', models.CharField(choices=[('Europe/Moscow', 'Europe/Moscow'), ('Europe/Dublin', 'Europe/Dublin'), ('America/New_York', 'America/New_York'), ('Asia/Dubai', 'Asia/Dubai'), ('Asia/Riyadh', 'Asia/Riyadh')], default='Europe/Dublin', max_length=30)),
                ('language', models.CharField(choices=[('en', 'English'), ('ru', 'Русский')], default='en', max_length=5)),
                ('diet_type', models.CharField(choices=[('standard', 'Standard'), ('balanced', 'Balanced'), ('low_fat', 'Low fat'), ('high_protein', 'High in Protein'), ('ketogenic', 'Ketogenic'), ('custom', 'Custom')], default='standard', max_length=20)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
